function plot_opt = quickplot_option(name)
% QUICKPLOT_OPTION selects one of the pre-defined set of options 
% for QUICKPLOT and returns it as a quickplot options structure plot_opt
% 
% Description of quickplot options structure:
%
%   errorbars: 0, if y errors are in columns right after every y-data column
%                   file: x-data, y1-data, y1-error, y2-data, y2-error, ...
%              1, if y error is not present in the data file
%                   file: x-data, y1-data, y2-data, ...
%
%   format: string, format of the output image file
%         options: 'png', 'svg', 'pdf'
%
%   linecolor: k-by-3 double array, each row is an rgb color
%         e.g. sample_color_map('parula', 5)
%         or   colormap('lines')
%         buit-in continuous color map names are: ....
%         (use the sample_color_map() to sample them) ...
%           'parula', 'jet', 'hsv', 'hot', 'cool', 'spring', 'summer', autumn',
%           'winter', 'gray', 'bone', 'copper', 'pink', 'lines'     
%         built-in staggered color map names are:
%         (use them directly with colormap() )
%         'lines', 'colorcube', 'prism', 'flag'
% 
%   linewidth: double, width of all plotted curves 
%         e.g. 1.5
% 
%   fontname: string, name of all fonts on plot
%         e.g. 'Times New Roman' or 'Verdena'
% 
%   fontsize: double, size of all fonts on plot in pt
%         e.g. 12
%
%   marker: string, symbol used as markers of all data on the plot
%         e.g. '.' or 'o', '*', '+', ...
% 
%   marker_size: double, size of all marker on the plot
%         e.g. 5
%   
%   label_of_xaxis: string or 'auto', pre-defined label for x-axis,
%         e.g. 'my label for the horizontal axis'
%         'auto': uses the first entry of the header of the datafile
% 
%   legend: string, position of the legend
%         e.g. 'NorthWest', 'SouthWest'
%
%   xmin: double or 'auto', smallest plotted x value
%   xmax: double or 'auto',  largest plotted x value
%   ymin: double or 'auto', smallest plotted y value
%   ymax: double or 'auto',  largest plotted y value
%         'auto' sets the corresponding value to the bound of the data
% 
%   aspect_ratio: 1-by-2 double array: [width, height] of the plot
%         e.g. [1,1], or [4,3], [16,9]
%   
%   box_boundary: 0 for no box, 1 for box around the plot
% 
%   left_margin: double
%   right_margin: double
%   top_margin: double
%   bottom_margin: double
%       additional relative space around the [xmin, xmax, ymin, ymax] box
%       measured in units of (xmax - xmin) and (ymax - ymin)


if strcmp(name, 'my favorite option')

    plot_opt = struct(...
        'errorbars', 1, ...
        'format', 'pdf', ...
        'linecolor', colormap('lines'), ...
        'linewidth', 0.5, ...
        'fontname', 'Verdena', ...
        'fontsize', 10, ...
        'marker', '.', ...
        'marker_size', 5, ...
        'label_of_xaxis', 'auto', ...
        'label_of_yaxis', 'yaxis', ...
        'legend_position', 'NorthWest', ...
        'xmin', 0, ...
        'xmax', 'auto', ...
        'ymin', 'auto', ...
        'ymax', 'auto', ...
        'aspect_ratio', [4,3], ...
        'box_boundary', 1, ...
        'left_margin', 0.1, ...
        'right_margin', 0.1, ...
        'top_margin', 0.1, ...
        'bottom_margin', 0.1 );
    
else
    warning([name, ' is not a known predefiened qucikplot option']);
    plot_opt = struct(...
        'errorbars', 0, ...
        'format', 'png', ...
        'linecolor', colormap('lines'), ...
        'linewidth', 1, ...
        'fontname', 'Cambria', ...
        'fontsize', 10, ...
        'marker', '.', ...
        'marker_size', 5, ...
        'label_of_xaxis', 'auto', ...
        'label_of_yaxis', 'yaxis', ...
        'legend_position', 'NorthWest', ...
        'xmin', 'auto', ...
        'xmax', 'auto', ...
        'ymin', 'auto', ...
        'ymax', 'auto', ...
        'aspect_ratio', [1,1], ...
        'box_boundary', 1, ...
        'left_margin', 0, ...
        'right_margin', 0, ...
        'top_margin', 0, ...
        'bottom_margin', 0 );
end


